{
	"name": "Sinus",
	"tags": "trigonometry circle wave",
	"description": "Le sinus est très pratique pour créer une oscillation douce.",

	"examples":
	[
		{
			"name": "Frequency",
			"description": "Dans cet exemple, nous pouvons faire varier la fréquence de notre sinus.",
			"properties":
			[
				{
					"name": "Frequency",
					"id": "frequency",
					"type": "float",
					"value": 3.1415,
					"min": 0.0,
					"max": 20.0
				},
				
				{
					"name": "Offset",
					"id": "offset",
					"type": "float",
					"value": 0,
					"min": 0.0,
					"max": 10.0
				}
			],
			
			"shader": "color = vec3(step(uv.y, sin(uv.x * frequency + offset) * 0.5 + 0.5));",
			"code": "float result = step(uv.y, sin(uv.x * frequency + offset));"
		},
		
		{
			"name": "Amplitude",
			"description": "Dans cet exemple, nous pouvons faire varier l'amplitude de notre sinus.",
			"properties":
			[
				{
					"name": "Amplitude",
					"id": "amplitude",
					"type": "float",
					"value": 0.5,
					"min": 0.0,
					"max": 2.0
				}
			],
			
			"shader": "color = vec3(step(uv.y, sin(uv.x * 3.1415 + time) * amplitude * 0.5 + 0.5));",
			"code": "float result = step(uv.y, sin(uv.x * 3.1415 + time) * amplitude);"
		},
		
		{
			"name": "Speed",
			"description": "Dans cet exemple, nous pouvons faire varier la vitesse de notre sinus.",
			"properties":
			[
				{
					"name": "Speed",
					"id": "speed",
					"type": "float",
					"value": 3.1415,
					"min": 0.0,
					"max": 20.0
				}
			],
			
			"shader": "color = vec3(step(uv.y, sin(uv.x * 3.1415 + time * speed) * 0.5 + 0.5));",
			"code": "float result = step(uv.y, sin(uv.x * 3.1415 + time * speed));"
		},
		
		{
			"name": "Blink",
			"description": "Dans cet exemple, le sinus est entièrement basé sur le temps plutôt que l'axe X.",
			"properties":
			[
				{
					"name": "Speed",
					"id": "speed",
					"type": "float",
					"value": 3.1415,
					"min": 0.0,
					"max": 20.0
				}
			],
			
			"shader": "color = vec3(sin(time * speed) * 0.5 + 0.5);",
			"code": "float result = sin(time * speed) * 0.5 + 0.5;"
		}
	]
}